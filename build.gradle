plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.sonarqube" version "3.3"
    id 'java'
}

sonarqube {
    properties {
        property "sonar.projectKey", "EddieSCJ1_starwars-api-java_AX8QPRG7C8anaB0EMiVx"
        property "sonar.qualitygate.wait", true
    }
}

compileJava.options.encoding = 'UTF-8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    /* Spring Boot */
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.1'
    developmentOnly 'org.springframework.boot:spring-boot-devtools:2.6.3'

    /* Spring Cloud */
    implementation("org.springframework.cloud:spring-cloud-context:3.1.0")

    /* Database */
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:2.6.3'
    implementation 'org.springframework.data:spring-data-mongodb:3.3.1'

    /* Docs*/
    implementation("org.springdoc:springdoc-openapi-ui:1.6.6")

    /* Code Gen */
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    /* Utils */
    implementation 'commons-lang:commons-lang:20030203.000129'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    /* Testing */
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.3'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:3.3.1'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation 'org.mockito:mockito-inline:3.8.0'

}

test {
    useJUnitPlatform()
}
